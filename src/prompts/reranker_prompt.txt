GOAL:
From the provided list of legal documents, select the top {k} documents that are most relevant to the user's legal question. For each selected document, assign a relevance score and provide a brief justification in Hungarian.

RANKING CRITERIA:
1. **Direct Answer:** Prefer documents that explicitly and clearly answer the question.
2. **Legal Context:** If no direct answer, prefer documents that provide strong, relevant legal context.
3. **Judicial Authority:** Prefer higher court documents (Kúria > Ítélőtábla > Törvényszék).
4. **Recency:** If all else is equal, prefer newer documents.
5. **Irrelevance:** Do not include documents that are completely irrelevant.

INPUT:
- A list of legal documents, each with a unique "doc_id".
- The user's legal question.

OUTPUT FORMAT:
- Return a single, valid JSON object (no extra text).
- The JSON must have one key: "ranked_documents".
- The value is a list of objects, each with:
  - "doc_id": The document's ID (e.g., "Kfv.37356/2007/3").
  - "relevance_score": Integer from 1 (least relevant) to 5 (most relevant).
  - "reason": A brief justification in Hungarian for the assigned score.

EXAMPLE OUTPUT:
```json
{
  "ranked_documents": [
    {
      "doc_id": "Pfv.21582/2009/4",
      "relevance_score": 5,
      "reason": "Ez a dokumentum közvetlenül válaszol a kérdésre, és pontos jogi definíciót tartalmaz."
    },
    {
      "doc_id": "Kfv.35062/2007/5",
      "relevance_score": 3,
      "reason": "A dokumentum releváns kontextust ad, de nem válaszolja meg közvetlenül a kérdést."
    }
  ]
}
```

---
Here is the data to process:

[DOCUMENTS]
{documents}
[/DOCUMENTS]

[LEGAL QUESTION]
{query}
[/LEGAL QUESTION]

Return only the JSON output.