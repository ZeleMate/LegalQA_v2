# CI-optimized Dockerfile for LegalQA
# This version is optimized for CI/CD with minimal dependencies

FROM python:3.10-slim AS builder

# Set environment variables for build optimization
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PIP_NO_CACHE_DIR=1
ENV PIP_DISABLE_PIP_VERSION_CHECK=1

# Install only essential system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install dependencies in optimized order
WORKDIR /build
COPY pyproject.toml .

# Install build tools
RUN pip install --upgrade pip setuptools wheel

# Install core dependencies (fastest to install)
RUN pip install --no-cache-dir \
    pandas \
    pyarrow \
    python-dotenv \
    fastapi \
    uvicorn[standard] \
    psycopg2-binary \
    scikit-learn \
    numpy \
    pgvector \
    asyncpg \
    aioredis \
    redis[hiredis] \
    sqlalchemy[asyncio] \
    prometheus-client \
    aioboto3 \
    cachetools

# Install ML dependencies (slower)
RUN pip install --no-cache-dir faiss-cpu

# Install LangChain (large but necessary)
RUN pip install --no-cache-dir \
    langchain \
    langchain-openai \
    langchain-google-genai \
    langchain-core \
    langchain-community \
    google-genai

# Install sentence-transformers last (largest)
RUN pip install --no-cache-dir sentence-transformers

# Production stage
FROM python:3.10-slim AS production

ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PYTHONOPTIMIZE=2
ENV PATH="/opt/venv/bin:$PATH"

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libpq5 \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy virtual environment
COPY --from=builder /opt/venv /opt/venv

# Create user
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Set up application
WORKDIR /app
COPY --chown=appuser:appuser ./src /app/src
COPY --chown=appuser:appuser ./scripts /app/scripts

RUN mkdir -p /app/data/processed /app/logs \
    && chown -R appuser:appuser /app

USER appuser

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

EXPOSE 8000

CMD ["uvicorn", "src.inference.app:app", \
     "--host", "0.0.0.0", \
     "--port", "8000", \
     "--log-level", "info"] 